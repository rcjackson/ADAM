[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "adam-atmos"
description = "A proof of concept for a digital twin for the Argonne Testbed for Multiscale Observational Studies. This initial package contains a model that determines the lakebreeze front location from the 0.5 degree scan of the NEXRAD radar."
readme = "README.rst"
authors = [
  {name = "Robert Clyde Jackson", email = "rjackson@anl.gov"}
]
maintainers = [
  {name = "Robert Clyde Jackson", email = "rjackson@anl.gov"}
]
classifiers = [

]
license = {text = "BSD license"}
dependencies = [
    "torchvision",
    "torch",
    "huggingface_hub",
    "arm_pyart",
    "safetensors",
    "cartopy",
    "boto3",
]

dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "coverage",  # testing
    "mypy",  # linting
    "pytest",  # testing
    "ruff",  # linting
    "tox", # testing
]

[project.urls]

bugs = "https://github.com/rcjackson/adam/issues"
changelog = "https://github.com/rcjackson/adam/blob/master/changelog.md"
homepage = "https://github.com/rcjackson/adam"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["*.*"]


[tool.setuptools.dynamic]
version = {attr = "adam.__version__"}

# Mypy
# ----

[tool.mypy]
files = "."

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
allow_untyped_defs = true
disable_error_code = "attr-defined"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list = py39, py310, py311, py312, py313, ruff
isolated_build = true

[gh]
python =
    3.13 = py313
    3.12 = py312
    3.11 = py311
    3.10 = py310
    3.9 = py39
    3.8 = py38

[testenv]
deps =
    -r{toxinidir}/requirements_dev.txt
commands =
    pytest --basetemp={envtmpdir}

[testenv:ruff]
deps =
    ruff
commands =
    ruff check .
"""